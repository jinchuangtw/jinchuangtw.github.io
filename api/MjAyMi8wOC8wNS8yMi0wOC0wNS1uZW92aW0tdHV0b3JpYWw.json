{"title":"如何從零開始建立屬於自己的 Neovim 高效開發環境","date":"2022-08-05T06:59:34.000Z","date_formatted":{"ll":"Aug 5, 2022","L":"08/05/2022","MM-DD":"08-05"},"thumbnail":"2022/08/05/22-08-05-neovim-tutorial/coding.jpg","link":"2022/08/05/22-08-05-neovim-tutorial","tags":["environment","neovim"],"categories":["Programming"],"updated":"2022-08-13T07:03:42.853Z","content":"<blockquote>\n<p>本文仍在持續更新中，若有任何疑問、勘誤，請來信 <a href=\"mailto:jinchuang1999@gmail.com\">jinchuang1999@gmail.com</a></p>\n</blockquote>\n<h2 id=\"前言：為何不使用現成的-ide\">前言：為何不使用現成的 IDE<a title=\"#前言：為何不使用現成的-ide\" href=\"#前言：為何不使用現成的-ide\"></a></h2>\n<p>在這個人人學程式的時代，集成式開發環境（Integrated Development Environment, <strong>IDE</strong>）往往是入門者寫程式的首選，其直覺化的圖形介面、便捷的程式庫引入方式，可以讓使用者免於繁複的設定，只需專注學習程式的概念以及語法 —— 如筆者在大學修 C、C++ 時常用的 <a href=\"https://visualstudio.microsoft.com/zh-hant/\" target=\"_blank\">Visual Studio</a>，抑或是 Python 專用的 <a href=\"https://www.jetbrains.com/pycharm/\" target=\"_blank\">PyCharm</a> 等。</p>\n<p>然而，此類 IDE 往往有著以下顯著的缺點：</p>\n<ul>\n<li>軟體檔案肥大，佔據電腦大量儲存空間\n<blockquote>\n<p>相對輕量化的開源 IDE 如：<a href=\"http://www.bloodshed.net\" target=\"_blank\">Dev-C++</a>，是筆者八年前（欸？）最喜歡的編輯器，可惜作者已不再更新、維護</p>\n</blockquote>\n</li>\n<li>啟動速度慢，而且當你裝了越多插件，就又更慢</li>\n<li>介面充滿花花綠綠的按鈕與各種複雜的 panels，壓縮程式碼的編輯空間，換言之就是很醜（主觀發言）</li>\n</ul>\n<p>另外，不同於龐大精密的 IDE，近年備受開發者青睞的 <a href=\"https://code.visualstudio.com\" target=\"_blank\">Visual Studio Code</a> 與 <a href=\"https://atom.io\" target=\"_blank\">Atom</a> 這類現代化文字編輯器，則可以透過自行安裝的插件來滿足各式使用需求，不論是不同程式語言的開發，或是 tex、markdown 等等文件編輯，都可以在插件市集中找到支援。</p>\n<p>不過，在這串長長的開發工具<a href=\"https://vinta.ws/blog/695\" target=\"_blank\">鄙視鏈</a>中，有一個神秘古老的編輯器，從未離開人們的視野… <strong>對，那就是 Vim</strong>。兼具超輕量化、跨平台通用性（Linux, macOS, WSL）、100% 可自定義的功能以及<s>讓你可以就此丟掉滑鼠的</s>快捷鍵組合，使得 Vim 成為一套讓使用者「越用越順手」的開發環境。若再搭配 tmux 使用，更可以使整個終端機工作的效率達到最大值。</p>\n<p>本文使用的 Neovim 則是源自 Vim 的分支版本。</p>\n<h2 id=\"一、neovim-基礎安裝與環境配置\">一、Neovim 基礎安裝與環境配置<a title=\"#一、neovim-基礎安裝與環境配置\" href=\"#一、neovim-基礎安裝與環境配置\"></a></h2>\n<p>這個段落我們主要會先讓你擁有一個可以跑 Neovim 且可以正常顯示 nerd 字符的環境。不同於各平台終端機內建的字型，nerd-font 的好處是支援各種圖形符號，可以讓後續建立 UI 時更加方便。</p>\n<h2 id=\"二、配置文件架構\">二、配置文件架構<a title=\"#二、配置文件架構\" href=\"#二、配置文件架構\"></a></h2>\n<h2 id=\"三、快捷鍵\">三、快捷鍵<a title=\"#三、快捷鍵\" href=\"#三、快捷鍵\"></a></h2>\n<h2 id=\"四、程式碼相關插件\">四、程式碼相關插件<a title=\"#四、程式碼相關插件\" href=\"#四、程式碼相關插件\"></a></h2>\n<h2 id=\"五、介面與操作相關插件\">五、介面與操作相關插件<a title=\"#五、介面與操作相關插件\" href=\"#五、介面與操作相關插件\"></a></h2>\n<h2 id=\"六、結語\">六、結語<a title=\"#六、結語\" href=\"#六、結語\"></a></h2>\n<h2 id=\"七、參考資料-&amp;-我的配置文件\">七、參考資料 &amp; 我的配置文件<a title=\"#七、參考資料-&amp;-我的配置文件\" href=\"#七、參考資料-&amp;-我的配置文件\"></a></h2>\n","plink":"https://jinchuangtw.github.io/2022/08/05/22-08-05-neovim-tutorial/","toc":[{"id":"前言：為何不使用現成的-ide","title":"前言：為何不使用現成的 IDE","index":"1"},{"id":"一、neovim-基礎安裝與環境配置","title":"一、Neovim 基礎安裝與環境配置","index":"2"},{"id":"二、配置文件架構","title":"二、配置文件架構","index":"3"},{"id":"三、快捷鍵","title":"三、快捷鍵","index":"4"},{"id":"四、程式碼相關插件","title":"四、程式碼相關插件","index":"5"},{"id":"五、介面與操作相關插件","title":"五、介面與操作相關插件","index":"6"},{"id":"六、結語","title":"六、結語","index":"7"},{"id":"七、參考資料-&-我的配置文件","title":"七、參考資料 &amp; 我的配置文件","index":"8"}],"copyright":{"author":"Jin Chuang","link":"<a href=\"https://jinchuangtw.github.io/2022/08/05/22-08-05-neovim-tutorial/\" title=\"如何從零開始建立屬於自己的 Neovim 高效開發環境\">https://jinchuangtw.github.io/2022/08/05/22-08-05-neovim-tutorial/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reading_time":"631 words in 4 min"}